{"version":3,"sources":["components/Recipe/Recipe.js","App.js","reportWebVitals.js","index.js","components/Recipe/Recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","toFixed","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","updateSearch","label","lable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAoBeA,EAjBA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACI,sBAAKC,UAAaC,IAAMC,OAAxB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BACKA,EAAWC,YAIxB,4CAAeR,EAASS,QAAQ,MAChC,qBAAKN,UAAWC,IAAMH,MAAOS,IAAKT,EAAOU,IAAI,S,MCgD1CC,MA3Df,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,uCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAiBhB,OACE,sBAAKxB,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,wBACA,uBAAMyB,SATQ,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAMmBd,UAAU,cAArC,UACE,uBACEA,UAAU,aACV4B,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAACJ,GAAD,OAlBG,SAAAA,GACnBZ,EAAUY,EAAEK,OAAOF,OAiBIG,CAAaN,MAEhC,wBAAQ1B,UAAU,aAAa4B,KAAK,SAApC,uBAIF,qBAAK5B,UAAU,UAAf,SACGW,EAAQR,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOgC,gBCvChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.66f2609b.chunk.js","sourcesContent":["import React from 'react' //rafce\r\nimport style from './Recipe.module.css'\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n    return (\r\n        <div className = {style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient =>(\r\n                    <li>\r\n                        {ingredient.text}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <p>Calories : {calories.toFixed(2)}</p>\r\n            <img className={style.image} src={image} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React, { useEffect, useState } from 'react'\nimport Recipe from './components/Recipe/Recipe'\nimport './App.css';\n\nfunction App() {\n\n  const APP_ID = \"9a8eea3a\"\n  const APP_KEY = \"05427799cd94578ca031950698ea31b3\t\"\n\n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('chicken')\n\n  useEffect(() => {\n    getRecipes()\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    const data = await response.json()\n    setRecipes(data.hits)\n\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const getSearch = e => {\n    e.preventDefault()\n    setQuery(search)\n    setSearch('')\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"logo\">Recipe App</div>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => updateSearch(e)}\n        />\n        <button className=\"search-btn\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.lable}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"Recipe_recipe__3eeRW\",\"image\":\"Recipe_image__jnmud\"};"],"sourceRoot":""}